services:
  honeyshell:
    container_name: honeyshell
    build:
      context: ./honeypot
      dockerfile: Dockerfile
    environment:
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - LOGGING_LEVEL=${LOGGING_LEVEL}
    ports:
      - "22:22"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - honeypot_network
    restart: unless-stopped
  database:
    container_name: honeyshell_db
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - honeypot_network
    restart: unless-stopped
  visualizer:
    container_name: honeyshell_visualizer
    build:
      context: ./visualizer
      dockerfile: Dockerfile
    environment:
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    ports:
      - "8080:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - honeypot_network
    restart: unless-stopped

networks:
  honeypot_network:
    driver: bridge
